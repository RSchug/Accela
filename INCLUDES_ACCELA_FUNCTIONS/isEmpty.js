 function isEmpty(str) {    return (!str || 0 === str.length);}
 function isBlank(str) {    return (!str || /^\s*$/.test(str));} function getRoots(nodeId){	var rootsArray = new Array();	var directParentsResult = aa.cap.getProjectByChildCapID(nodeId,'R',null);	    if (directParentsResult.getSuccess())    {		tmpdirectParents = directParentsResult.getOutput();		for(ff in tmpdirectParents) {			if (tmpdirectParents[ff]) {								var tmpNode = getRootNode(tmpdirectParents[ff].getProjectID(), 1);				var id1 = tmpNode.getID1();				var id2 = tmpNode.getID2();				var id3 = tmpNode.getID3();				var pCapId = aa.cap.getCapID(id1,id2,id3).getOutput();				rootsArray.push(pCapId);			}		}    }	return rootsArray;} function isSameNode(node1, node2){	if (node1 == null || node1 == undefined || node2 == null || node2 == undefined)	{		return false;	}	return node1.getID1() == node2.getID1() && node1.getID2() == node2.getID2() && node1.getID3() == node2.getID3();} function getRootNode(nodeId, depth){	if (depth > 9)	{		return nodeId;	}	var depthCount = depth + 1;	var currentNode = nodeId;	var directParentsResult = aa.cap.getProjectByChildCapID(currentNode,'R',null);    if (directParentsResult.getSuccess())    {		directParents = directParentsResult.getOutput();		for(var ff in directParents) {						if (directParents[ff])			{								var id1 = directParents[ff].getProjectID().getID1();				var id2 = directParents[ff].getProjectID().getID2();				var id3 = directParents[ff].getProjectID().getID3();												while (!isSameNode(currentNode,directParents[ff].getProjectID()))				{					currentNode = getRootNode(directParents[ff].getProjectID(), depthCount);									}			}					}    }	return currentNode;}