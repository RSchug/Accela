 function doStandardChoiceActions(stdChoiceEntry, doExecution, docIndent) {    var thisDate = new Date();    var thisTime = thisDate.getTime();    var lastEvalTrue = false;    stopBranch = false;  // must be global scope    logDebug("Executing : " + stdChoiceEntry + ", Elapsed Time: " + ((thisTime - startTime) / 1000) + " Seconds")    var pairObjArray = getScriptAction(stdChoiceEntry);    if (!doExecution) docWrite(stdChoiceEntry, true, docIndent);    for (xx in pairObjArray) {        doObj = pairObjArray[xx];        if (doExecution) {            if (doObj.enabled) {                if (stopBranch)                    {                    stopBranch = false;                    break;                    }                logDebug(aa.env.getValue("CurrentUserID") + " : " + stdChoiceEntry + " : #" + doObj.ID + " : Criteria : " + doObj.cri, 2)        try            {                    if (eval(token(doObj.cri)) || (lastEvalTrue && doObj.continuation)) {                        logDebug(aa.env.getValue("CurrentUserID") + " : " + stdChoiceEntry + " : #" + doObj.ID + " : Action : " + doObj.act, 2)                            eval(token(doObj.act));                        lastEvalTrue = true;                         }                      else {                        if (doObj.elseact) {                            logDebug(aa.env.getValue("CurrentUserID") + " : " + stdChoiceEntry + " : #" + doObj.ID + " : Else : " + doObj.elseact, 2)                            eval(token(doObj.elseact));                        }                        lastEvalTrue = false;            }        }        catch(err)            {            showDebug = 3;            logDebug("**ERROR An error occured in the following standard choice " + stdChoiceEntry + "#" + doObj.ID + "  Error:  " + err.message);            }                }        }        else // just document        {            docWrite("|  ", false, docIndent);            var disableString = "";            if (!doObj.enabled) disableString = "<DISABLED>";            if (doObj.elseact)                docWrite("|  " + doObj.ID + " " + disableString + " " + doObj.cri + " ^ " + doObj.act + " ^ " + doObj.elseact, false, docIndent);            else                docWrite("|  " + doObj.ID + " " + disableString + " " + doObj.cri + " ^ " + doObj.act, false, docIndent);            for (yy in doObj.branch) {                doStandardChoiceActions(doObj.branch[yy], false, docIndent + 1);            }        }    } // next sAction    if (!doExecution) docWrite(null, true, docIndent);    var thisDate = new Date();    var thisTime = thisDate.getTime();    logDebug("Finished: " + stdChoiceEntry + ", Elapsed Time: " + ((thisTime - startTime) / 1000) + " Seconds")}
